import { ChessPosition, ChessMove } from './types.js';
export declare class ChessBoard {
    private element;
    private state;
    private onPositionChange?;
    private onMoveMade?;
    private dragElement;
    private dragOffset;
    private isDragging;
    private currentDropTarget;
    constructor(element: HTMLElement, initialFEN?: string);
    private render;
    private createPieceElement;
    private getPieceSymbol;
    private setupEventListeners;
    private handleMouseDown;
    private handleTouchStart;
    private startDrag;
    private handleMouseMove;
    private handleTouchMove;
    private handleMouseUp;
    private handleTouchEnd;
    private endDrag;
    private updateDropTarget;
    private findSquareAtPosition;
    private makeMove;
    private isValidMove;
    setPosition(fen: string): void;
    getPosition(): ChessPosition;
    getFEN(): string;
    setOnPositionChange(callback: (position: ChessPosition) => void): void;
    setOnMoveMade(callback: (move: ChessMove) => void): void;
    showMoveArrow(from: string, to: string, piece: string): void;
    hideMoveArrow(): void;
    private positionArrow;
    destroy(): void;
}
